AWSTemplateFormatVersion: "2010-09-09"
Description: |
  ssm-label - Creates CloudTrail, CloudWatchLogGroup and IAM Role, S3 Bucket for CloudTrail, SNS Topic.
  After deploying this stack - change in UI - CloudWatch Trail > Management events > Read/Write events = Write-only and Log AWS KMS events = No

Parameters:
  AppName:
    Type: String
    Default: ssm-label
  Stage:
    Type: String
    Description: Select the stage to deploy
    AllowedValues:
      - dev
      - staging
      - prod
    ConstraintDescription: Must be any of the available options
  LogGroupPath:
    Type: String
    Default: /aws/cloudtrail/logs

Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Ref: LogGroupPath
      RetentionInDays: 30

  CloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - Fn::GetAtt:
                      - LogGroup
                      - Arn

  S3Bucket:
    DeletionPolicy: Retain
    Type: AWS::S3::Bucket
    Properties: {}

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: S3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AWSCloudTrailAclCheck"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:GetBucketAcl"
            Resource:
              Fn::Sub: "arn:aws:s3:::${S3Bucket}"
          - Sid: "AWSCloudTrailWrite"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:PutObject"
            Resource:
              Fn::Sub: "arn:aws:s3:::${S3Bucket}/AWSLogs/${AWS::AccountId}/*"
            Condition:
              StringEquals:
                s3:x-amz-acl: "bucket-owner-full-control"

  Topic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName:
        Fn::Sub: ${AppName}-cloudtrail-${Stage}

  TopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - Ref: Topic
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AWSCloudTrailSNSPolicy"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Resource: "*"
            Action: "SNS:Publish"

  Trail:
    DependsOn:
      - BucketPolicy
      - TopicPolicy
    Type: AWS::CloudTrail::Trail
    Properties:
      TrailName: write-only-events
      CloudWatchLogsLogGroupArn:
        Fn::GetAtt:
          - LogGroup
          - Arn
      CloudWatchLogsRoleArn:
        Fn::GetAtt:
          - CloudWatchRole
          - Arn
      S3BucketName:
        Ref: "S3Bucket"
      SnsTopicName:
        Fn::GetAtt:
          - Topic
          - TopicName
      IsLogging: true
      IsMultiRegionTrail: true
      IncludeGlobalServiceEvents: true

Outputs:
  S3Bucket:
    Value:
      Ref: S3Bucket
    Export:
      Name:
        Fn::Sub: "${AppName}-CloudTrailLogs-${Stage}"
  CloudTrailId:
    Value:
      Fn::GetAtt:
        - Trail
        - Arn
    Export:
      Name:
        Fn::Sub: "${AppName}-CloudTrailId-${Stage}"
